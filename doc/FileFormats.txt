Ultima 4 File Structures
========================

SHAPES.EGA
----------

This contains the bitmaps for each tile.  Each tile is 16x16 pixels,
and each byte represents two pixels.  In other words, the first 8
bytes represent the 16 pixels on the first row of the first tile.

offset  len  notes
0x0     128  tile 0
0x80    128  tile 1
0x100   128  tile 2
...
0x7F80  128  tile 255


CHARSET.EGA
-----------

This contains the bitmaps for each character in the font.  Each
character is 8x8 pixels, and each byte represents two pixels.  In
other words, the first 4 bytes represent the 8 pixels on the first row
of the first character.  The order is the standard ASCII mapping; 'A'
is character 65, 'z' is character 122.

offset  len  notes
0x0     32   character 0
0x20    32   character 1
0x40    32   character 2
...
0x1FC0  32   character 255


WORLD.MAP
---------

This is the map of Britannia. It is 256x256 tiles in total, broken up
into 64 32x32 chunks.  The first chunk is in the top left corner, the
next just below, and so on, until the last in the bottom right corner.
Each tile is stored as a byte that maps to the tiles in SHAPES.EGA.

The "chunked" layout is an artifact of the limited memory on the
original machines that ran Ultima 4.  The whole map would take 64k,
too much for a C64 or an Apple II, so the game would keep a limited
number of 1k chunks in memory at a time.  As the player moved around,
old chunks were thrown out as new ones were swapped in.

offset len  notes
0x0    1024 32x32 map matrix for chunk 0
0x400  1024 32x32 map matrix for chunk 1
...
0xFC00 1024 32x32 map matrix for chunk 63


.ULT files
----------

These contain town information.  Specifically, a 32x32 map, plus the
starting position, movement behavior, and conversation index of each
NPC.  The conversation index gives the starting position of the NPC's
dialog block in the cooresponding .TLK file.  I'm not sure why some of
the data is duplicated.

offset len  notes
0x0    1024 32x32 town map matrix
0x400  32   tile for NPCs 0-31
0x420  32   start_x for NPCs 0-31
0x440  32   start_y for NPCs 0-31
0x460  32   repitition of 0x400-0x41F
0x480  32   repitition of 0x420-0x43F
0x4A0  32   repitition of 0x440-0x45F
0x4C0  32   movement_behavior for NPCs 0-31 (0x0-fixed, 0x1-wander, 0x80-follow, 0xFF-attack)
0x4E0  32   conversion index (tlk file) for NPCs 0-31


.TLK files
----------

These contain conversation information.  The file has a 288 (0x120)
byte block containing his or her dialogues, plus the words that
trigger his or her responses (keywords).  Most of the fields are
variable length strings terminated by a single zero byte and the
following field starts immediately after.  The blocks are padded
with zero bytes to 288 bytes.

0x0    1    NPC 0 ??? question flag (0x0-no question? (water in LCB), 0x3-??? (Seanna in BD), 0x4-??? (Brigant in BD) 0x5-???, 0x6-???)
0x1    1    NPC 0 question type (0x0-should answer yes, 0x1-should answer no)
0x2    1    NPC 0 ??? (0x0, 0x10, 0x20, 0x32)
0x3    var  NPC 0 name (zero terminated)
var    var  NPC 0 pronoun (zero terminated)
var    var  NPC 0 description (zero terminated)
var    var  NPC 0 job (zero terminated)
var    var  NPC 0 response 1 (zero terminated)
var    var  NPC 0 response 2 (zero terminated)
var    var  NPC 0 question (zero terminated)
var    var  NPC 0 yes answer (zero terminated)
var    var  NPC 0 no answer (zero terminated)
var    5    NPC 0 keyword 1 (zero terminated)
var    5    NPC 0 keyword 2 (zero terminated)
var    var  zero padding
0x120  3    NPC 0 ???
...


.CON files
----------

These files contain the 11x11 battleground maps shown when combat
starts.  It has the map itself plus starting positions for up to 16
monsters and 8 party members.

offset len  notes
0x0    16   start_x for monsters 0-15
0x10   16   start_y for monsters 0-15
0x20   8    start_x for party members 0-7
0x28   8    start_y for party members 0-7
0x30   32   ???
0x50   121  11x11 map matrix
0xB9   7    ???


.DNG files
----------

Thes files contain dungeon information.  The first 512 bytes are the
8x8 maps for each of the 8 levels.  These are used for the dungeons 3D
mode.  The rest of the file is a set of 16 (64 in the case of the
ABYSS.DNG) 256 byte blocks that define the dungeon rooms.

offset len  notes
0x0    64   level 1 8x8 map matrix
0x40   64   level 2 8x8 map matrix
0x80   64   level 3 8x8 map matrix
0xA0   64   level 4 8x8 map matrix
0x100  64   level 5 8x8 map matrix
0x140  64   level 6 8x8 map matrix
0x180  64   level 7 8x8 map matrix
0x1A0  64   level 8 8x8 map matrix
0x200  16   room 0 ??? (often 0x0)
0x210  16   room 0 tile for monsters 0-15
0x220  16   room 0 start_x for monster 0-15
0x230  16   room 0 start_y for monster 0-15
0x240  8    room 0 start_x for party member 0-7 (north entry)
0x248  8    room 0 start_y for party member 0-7 (north entry)
0x250  8    room 0 start_x for party member 0-7 (east entry)
0x258  8    room 0 start_y for party member 0-7 (east entry)
0x260  8    room 0 start_x for party member 0-7 (south entry)
0x268  8    room 0 start_y for party member 0-7 (south entry)
0x270  8    room 0 start_x for party member 0-7 (west entry)
0x278  8    room 0 start_y for party member 0-7 (west entry)
0x280  121  room 0 11x11 map matrix
0x2F9  7    room 0 ??? (often 0x0)
0x300  16   room 1 ??? (often 0x0)
0x310  16   room 1 tile for monsters 0-15
...
0x1780 121  room 15 11x11 map matrix
0x17F9 7    room 15 ??? (often 0x0)


Sources
-------

http://www.geocities.com/xenerkes/
